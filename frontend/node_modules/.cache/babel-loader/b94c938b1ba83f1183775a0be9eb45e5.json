{"ast":null,"code":"var _jsxFileName = \"/Users/celia/Projects/PerfMatch/perfmatch/frontend/src/components/Employer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../style/MatchList.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Employer = props => {\n  _s();\n\n  const [employer, setEmployer] = useState({\n    id: 0,\n    name: \"\",\n    age: -1,\n    profilePhoto: null,\n    description: \"\",\n    email: null,\n    createdAt: null\n  });\n  const id = props.id;\n  useEffect(() => {\n    getEmployerDetails();\n  }, []);\n\n  const getEmployerDetails = () => {\n    fetch(\"/api/getEmployer\" + \"?id=\" + id).then(response => response.json()).then(data => {\n      setEmployer({\n        name: data.name,\n        age: data.age,\n        profilePhoto: data.profile_photo,\n        description: data.description,\n        email: data.email,\n        password: data.password,\n        createdAt: data.created_at\n      });\n    });\n  };\n\n  if (employer.profilePhoto == \"\") {\n    employer.profilePhoto = \"https://cdn.jsdelivr.net/gh/liangchuxin/blog-imgs/img/20210802205546.jpg\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"matchCard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profilePic\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: employer.profilePhoto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profileInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileMeta\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"NAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: employer.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"AGE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: employer.age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"profileDescrip\",\n        children: employer.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Employer, \"Q4kzWyffO2d0GNPU13QOGeG54BI=\");\n\n_c = Employer;\nexport default Employer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employer\");","map":{"version":3,"sources":["/Users/celia/Projects/PerfMatch/perfmatch/frontend/src/components/Employer.js"],"names":["React","useEffect","useState","Employer","props","employer","setEmployer","id","name","age","profilePhoto","description","email","createdAt","getEmployerDetails","fetch","then","response","json","data","profile_photo","password","created_at"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,yBAAP;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC;AACvCK,IAAAA,EAAE,EAAE,CADmC;AAEvCC,IAAAA,IAAI,EAAE,EAFiC;AAGvCC,IAAAA,GAAG,EAAE,CAAC,CAHiC;AAIvCC,IAAAA,YAAY,EAAE,IAJyB;AAKvCC,IAAAA,WAAW,EAAE,EAL0B;AAMvCC,IAAAA,KAAK,EAAE,IANgC;AAOvCC,IAAAA,SAAS,EAAE;AAP4B,GAAD,CAAxC;AAUA,QAAMN,EAAE,GAAGH,KAAK,CAACG,EAAjB;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,kBAAkB;AACnB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,kBAAkB,GAAG,MAAM;AAC/BC,IAAAA,KAAK,CAAC,qBAAqB,MAArB,GAA8BR,EAA/B,CAAL,CACGS,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdb,MAAAA,WAAW,CAAC;AACVE,QAAAA,IAAI,EAAEW,IAAI,CAACX,IADD;AAEVC,QAAAA,GAAG,EAAEU,IAAI,CAACV,GAFA;AAGVC,QAAAA,YAAY,EAAES,IAAI,CAACC,aAHT;AAIVT,QAAAA,WAAW,EAAEQ,IAAI,CAACR,WAJR;AAKVC,QAAAA,KAAK,EAAEO,IAAI,CAACP,KALF;AAMVS,QAAAA,QAAQ,EAAEF,IAAI,CAACE,QANL;AAOVR,QAAAA,SAAS,EAAEM,IAAI,CAACG;AAPN,OAAD,CAAX;AASD,KAZH;AAaD,GAdD;;AAgBA,MAAIjB,QAAQ,CAACK,YAAT,IAAyB,EAA7B,EAAiC;AAC/BL,IAAAA,QAAQ,CAACK,YAAT,GACE,0EADF;AAED;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEL,QAAQ,CAACK;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAIL,QAAQ,CAACG;AAAb;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAIH,QAAQ,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA,kBAA+BJ,QAAQ,CAACM;AAAxC;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA1DD;;GAAMR,Q;;KAAAA,Q;AA4DN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../style/MatchList.scss\";\n\nconst Employer = (props) => {\n  const [employer, setEmployer] = useState({\n    id: 0,\n    name: \"\",\n    age: -1,\n    profilePhoto: null,\n    description: \"\",\n    email: null,\n    createdAt: null,\n  });\n\n  const id = props.id;\n\n  useEffect(() => {\n    getEmployerDetails();\n  }, []);\n\n  const getEmployerDetails = () => {\n    fetch(\"/api/getEmployer\" + \"?id=\" + id)\n      .then((response) => response.json())\n      .then((data) => {\n        setEmployer({\n          name: data.name,\n          age: data.age,\n          profilePhoto: data.profile_photo,\n          description: data.description,\n          email: data.email,\n          password: data.password,\n          createdAt: data.created_at,\n        });\n      });\n  };\n\n  if (employer.profilePhoto == \"\") {\n    employer.profilePhoto =\n      \"https://cdn.jsdelivr.net/gh/liangchuxin/blog-imgs/img/20210802205546.jpg\";\n  }\n\n  return (\n    <div className=\"matchCard\">\n      <div className=\"profilePic\">\n        <img src={employer.profilePhoto} />\n      </div>\n      <div className=\"profileInfo\">\n        <div className=\"profileMeta\">\n          <span>\n            <h3>NAME</h3>\n            <p>{employer.name}</p>\n          </span>\n          <span>\n            <h3>AGE</h3>\n            <p>{employer.age}</p>\n          </span>\n        </div>\n        <p className=\"profileDescrip\">{employer.description}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Employer;\n"]},"metadata":{},"sourceType":"module"}