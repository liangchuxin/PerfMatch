{"ast":null,"code":"import _slicedToArray from\"/Users/celia/Projects/PerfMatch/perfmatch/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";function FadeInSection(props){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isVisible=_React$useState2[0],setVisible=_React$useState2[1];var domRef=React.useRef();React.useEffect(function(){var observer=new IntersectionObserver(function(entries){entries.forEach(function(entry){return setVisible(entry.isIntersecting);});});observer.observe(domRef.current);},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"fade-in-section \".concat(isVisible?'is-visible':''),ref:domRef,children:props.children});}export default FadeInSection;","map":{"version":3,"sources":["/Users/celia/Projects/PerfMatch/perfmatch/frontend/src/components/FadeIn.js"],"names":["React","useState","FadeInSection","props","isVisible","setVisible","domRef","useRef","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","current","children"],"mappings":"yKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,C,2CAEA,QAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,CAC5B,oBAAgCH,KAAK,CAACC,QAAN,CAAe,KAAf,CAAhC,oDAAOG,SAAP,qBAAkBC,UAAlB,qBACA,GAAMC,CAAAA,MAAM,CAAGN,KAAK,CAACO,MAAN,EAAf,CACAP,KAAK,CAACQ,SAAN,CAAgB,UAAM,CACpB,GAAMC,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,oBAAJ,CAAyB,SAAAC,OAAO,CAAI,CACnDA,OAAO,CAACC,OAAR,CAAgB,SAAAC,KAAK,QAAIR,CAAAA,UAAU,CAACQ,KAAK,CAACC,cAAP,CAAd,EAArB,EACD,CAFgB,CAAjB,CAGAL,QAAQ,CAACM,OAAT,CAAiBT,MAAM,CAACU,OAAxB,EACD,CALD,CAKG,EALH,EAMA,mBACE,YACE,SAAS,2BAAqBZ,SAAS,CAAG,YAAH,CAAkB,EAAhD,CADX,CAEE,GAAG,CAAEE,MAFP,UAIGH,KAAK,CAACc,QAJT,EADF,CAQD,CACD,cAAef,CAAAA,aAAf","sourcesContent":["import React, { useState } from 'react';\n\nfunction FadeInSection(props) {\n  const [isVisible, setVisible] = React.useState(false);\n  const domRef = React.useRef();\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => setVisible(entry.isIntersecting));\n    });\n    observer.observe(domRef.current);\n  }, []);\n  return (\n    <div\n      className={`fade-in-section ${isVisible ? 'is-visible' : ''}`}\n      ref={domRef}\n    >\n      {props.children}\n    </div>\n  );\n}\nexport default FadeInSection;"]},"metadata":{},"sourceType":"module"}